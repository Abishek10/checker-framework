diff -r -U3 a/java/beans/PropertyChangeSupport.java b/java/beans/PropertyChangeSupport.java
--- a/java/beans/PropertyChangeSupport.java	2016-06-12 02:58:22.218013832 -0700
+++ b/java/beans/PropertyChangeSupport.java	2016-06-14 18:45:35.655683629 -0700
@@ -186,7 +186,8 @@
      *         empty array if no listeners have been added
      * @since 1.4
      */
-    public PropertyChangeListener @PolyUI  @PolyUIEffect [] getPropertyChangeListeners(@PolyUI PropertyChangeSupport this) {
+    @PolyUIEffect
+    public PropertyChangeListener @PolyUI [] getPropertyChangeListeners(@PolyUI PropertyChangeSupport this) {
         return this.map.getListeners();
     }
 
@@ -253,7 +254,8 @@
      *         returned.
      * @since 1.4
      */
-    public PropertyChangeListener @PolyUI  @PolyUIEffect [] getPropertyChangeListeners(@PolyUI PropertyChangeSupport this, String propertyName) {
+    @PolyUIEffect
+    public PropertyChangeListener @PolyUI [] getPropertyChangeListeners(@PolyUI PropertyChangeSupport this, String propertyName) {
         return this.map.getListeners(propertyName);
     }
 
diff -r -U3 a/java/util/concurrent/Callable.java b/java/util/concurrent/Callable.java
--- a/java/util/concurrent/Callable.java	2016-06-12 04:25:16.756391555 -0700
+++ b/java/util/concurrent/Callable.java	2016-06-14 18:45:35.663683668 -0700
@@ -59,7 +59,6 @@
  */
 @FunctionalInterface
 @AnnotatedFor({"nullness"})
-@FunctionalInterface
 public interface Callable<V extends @Nullable Object> {
     /**
      * Computes a result, or throws an exception if unable to do so.
diff -r -U3 a/java/util/function/Consumer.java b/java/util/function/Consumer.java
--- a/java/util/function/Consumer.java	2016-06-12 04:29:31.189758927 -0700
+++ b/java/util/function/Consumer.java	2016-06-14 18:45:35.670683703 -0700
@@ -40,7 +40,6 @@
  * @since 1.8
  */
 @FunctionalInterface
-@FunctionalInterface
 public interface Consumer<T> {
 
     /**
diff -r -U3 a/java/util/function/DoubleConsumer.java b/java/util/function/DoubleConsumer.java
--- a/java/util/function/DoubleConsumer.java	2016-06-12 04:30:08.003956586 -0700
+++ b/java/util/function/DoubleConsumer.java	2016-06-14 18:45:35.677683738 -0700
@@ -40,7 +40,6 @@
  * @since 1.8
  */
 @FunctionalInterface
-@FunctionalInterface
 public interface DoubleConsumer {
 
     /**
diff -r -U3 a/java/util/function/Function.java b/java/util/function/Function.java
--- a/java/util/function/Function.java	2016-06-12 04:32:44.576796738 -0700
+++ b/java/util/function/Function.java	2016-06-14 18:45:35.683683768 -0700
@@ -39,7 +39,6 @@
  * @since 1.8
  */
 @FunctionalInterface
-@FunctionalInterface
 public interface Function<T, R> {
 
     /**
diff -r -U3 a/java/util/function/IntConsumer.java b/java/util/function/IntConsumer.java
--- a/java/util/function/IntConsumer.java	2016-06-12 04:32:22.837680137 -0700
+++ b/java/util/function/IntConsumer.java	2016-06-14 18:45:35.689683797 -0700
@@ -40,7 +40,6 @@
  * @since 1.8
  */
 @FunctionalInterface
-@FunctionalInterface
 public interface IntConsumer {
 
     /**
diff -r -U3 a/java/util/function/LongConsumer.java b/java/util/function/LongConsumer.java
--- a/java/util/function/LongConsumer.java	2016-06-12 04:33:43.973115242 -0700
+++ b/java/util/function/LongConsumer.java	2016-06-14 18:45:35.696683832 -0700
@@ -40,7 +40,6 @@
  * @since 1.8
  */
 @FunctionalInterface
-@FunctionalInterface
 public interface LongConsumer {
 
     /**
diff -r -U3 a/java/lang/reflect/Constructor.java b/java/lang/reflect/Constructor.java
--- a/java/lang/reflect/Constructor.java	2016-06-28 11:04:00.383595901 -0700
+++ b/lang/reflect/Constructor.java	2016-06-28 14:04:38.546407519 -0700
@@ -514,7 +514,7 @@
      * @throws NullPointerException  {@inheritDoc}
      * @since 1.5
      */
-    public <T extends Annotation> T getAnnotation(Class<T> annotationClass) {
+    public <T extends @Nullable Annotation> @Nullable T getAnnotation(Class<T> annotationClass) {
         return super.getAnnotation(annotationClass);
     }
 
diff -r -U3 a/java/util/logging/LogManager.java b/java/util/logging/LogManager.java
--- a/java/util/logging/LogManager.java	2016-06-28 12:02:20.923518020 -0700
+++ b/java/util/logging/LogManager.java	2016-06-28 14:02:14.006672785 -0700
@@ -26,7 +26,7 @@
 
 package java.util.logging;
 
-import java.lang.SuppressWarnings;
+import org.checkerframework.checker.signature.qual.BinaryName;
 import org.checkerframework.framework.qual.AnnotatedFor;
 import org.checkerframework.checker.interning.qual.UsesObjectEquals;
 import java.io.*;
@@ -146,7 +146,7 @@
 */
 
 @UsesObjectEquals
-@AnnotatedFor({"interning"})
+@AnnotatedFor({"interning","signature"})
 public class LogManager {
     // The global LogManager object
     private static final LogManager manager;
@@ -1413,7 +1413,8 @@
         // Load the properties
         props.load(ins);
         // Instantiate new configuration objects.
-        String names[] = parseClassNames("config");
+        SuppressWarnings({"signature"})
+        String names @BinaryName [] = parseClassNames("config");
 
         for (int i = 0; i < names.length; i++) {
             String word = names[i];
diff -r -U3 a/sun/reflect/Reflection.java b/sun/reflect/Reflection.java
--- a/sun/reflect/Reflection.java	Fri May 13 18:39:58 2016 +0300
+++ b/sun/reflect/Reflection.java	Tue Jun 28 14:53:05 2016 -0700
@@ -56,6 +56,7 @@
         ignoring frames associated with java.lang.reflect.Method.invoke()
         and its implementation. */
     @CallerSensitive
+    @SuppressWarnings("rawtypes")
     public static native Class<?> getCallerClass();
 
     /**
